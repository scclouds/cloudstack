workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - lint
  - build
  - packaging

# Template for `before_script` npm clean install on UI linting and building stages
.before_script_template: &npm-clean-install
  before_script:
    - cd ui
    - npm ci --cache .npm --prefer-offline

# Template for `rules` used in backend jobs
.rules_template: &backend-rules
  rules:
    - if:
      changes:
        - "**/*.java"
        - "**/*.xml"
        - "**/*.sh"

#####################
#       LINT        #
#####################
lint-frontend:
  stage: lint
  tags:
    - cloudstack
  <<: *npm-clean-install
  script:
    - echo "Starting front-end linting..."
    - npx vue-cli-service lint --no-fix
    - echo "Front-end linting done."
  rules:
    - if:
      changes:
        - ui/**/*


# lint-backend:
#   stage: lint
#   tags:
#     - cloudstack
#   script:
#     - echo "Starting back-end linting..."
#     - mvn checkstyle:checkstyle
#     - echo "Back-end linting done."
#   <<: *backend-rules

#####################
#       BUILD       #
#####################
build-frontend:
  stage: build
  needs:
    - lint-frontend
  tags:
    - cloudstack
  <<: *npm-clean-install
  script:
    - echo "Building frontend..."
    - npm run build
    - echo "Done building frontend."
  rules:
    - if:
      changes:
        - ui/**/*

build-backend-skip-tests:
  stage: build
  <<: *backend-rules
  # needs:
  #   - lint-backend
  tags:
    - cloudstack
  script:
    - echo "Building backend with 'mvn clean install -DskipTests'..."
    - mvn clean install -DskipTests
    - echo "Done building backend with 'mvn clean install -DskipTests'."

build-backend-with-test:
  stage: build
  <<: *backend-rules
  # needs:
  #   - lint-backend
  tags:
    - cloudstack
  script:
    - echo "Building backend with 'mvn clean install'..."
    - mvn clean install
    - echo "Done building backend with 'mvn clean install'."

build-backend-with-noredist:
  stage: build
  <<: *backend-rules
  # needs:
  #   - lint-backend
  tags:
    - cloudstack
  script:
    - echo "Building backend with 'mvn clean install -Dnoredist'..."
    - mvn clean install -Dnoredist
    - echo "Done building backend with 'mvn clean install -Dnoredist'."

build-backend-with-systemvm:
  stage: build
  <<: *backend-rules
  # needs:
  #   - lint-backend
  tags:
    - cloudstack
  script:
    - echo "Building backend with 'mvn clean install -Psystemvm,developer -Dsystemvm'..."
    - mvn clean install -Psystemvm,developer -Dsystemvm
    - echo "Done building backend with 'mvn clean install -Psystemvm,developer -Dsystemvm'."

build-backend-combined:
  stage: build
  <<: *backend-rules
  # needs:
  #   - lint-backend
  tags:
    - cloudstack
  script:
    - echo "Building backend with 'mvn clean install -Dnoredist -Psystemvm,developer -Dsystemvm'..."
    - mvn clean install -Dnoredist -Psystemvm,developer -Dsystemvm
    - echo "Done building backend with 'mvn clean install -Dnoredist -Psystemvm,developer -Dsystemvm'"

#####################
# GENERATE PACKAGES #
#####################

generate-deb-packages:
  stage: packaging
  tags:
    - cloudstack
  script:
    - echo "Generating .deb packages..."
    - docker run -v $CI_PROJECT_DIR:/mnt/build/cloudstack -v ~/.m2:/root/.m2 -e "USER_ID=$(id -u)" -e "USER_GID=$(id -g)" -e "ACS_BUILD_OPTS=-Dnoredist" scclouds/cloudstack-deb-builder:ubuntu2004-jdk11-python3
    - echo "Done generating .deb packages."
  artifacts:
    expire_in: 12h
    name: "test-deb-$CI_COMMIT_SHORT_SHA"
    paths:
      - dist/debbuild/DEBS/*-agent*
      - dist/debbuild/DEBS/*-common*
      - dist/debbuild/DEBS/*-management*
      - dist/debbuild/DEBS/*-ui*
      - dist/debbuild/DEBS/*-usage*

generate-rpm-packages:
  stage: packaging
  tags:
    - cloudstack
  script:
    - echo "Generating .rpm packages..."
    - docker run -v $CI_PROJECT_DIR:/mnt/build/cloudstack -v ~/.m2:/root/.m2 -e "USER_ID=$(id -u)" -e "USER_GID=$(id -g)" scclouds/cloudstack-rpm-builder:centos7-jdk11-gcc9.3 --distribution centos7 --pack noredist
    - echo "Done generating .rpm packages."
  artifacts:
    expire_in: 2h
    name: "test-rpm-$CI_COMMIT_SHORT_SHA"
    paths:
      - dist/rpmbuild/RPMS/x86_64/*-agent*
      - dist/rpmbuild/RPMS/x86_64/*-common*
      - dist/rpmbuild/RPMS/x86_64/*-management*
      - dist/rpmbuild/RPMS/x86_64/*-ui*
      - dist/rpmbuild/RPMS/x86_64/*-usage*
